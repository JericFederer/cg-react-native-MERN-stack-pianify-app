import { getAutoGeneratedPlaylist, getFollowersProfile, getFollowersProfilePublic, getFollowingsProfile, getIsFollowing, getPlaylistAudios, getPrivatePlaylistAudios, getPublicPlaylist, getPublicProfile, getPublicUploads, getRecommendedByProfile, getUploads, updateFollower } from "#/controllers/profile";
import { isAuthenticated, mustBeAuthenticated } from "#/middleware/auth";
import { Router } from "express";

const profileRouter = Router();

profileRouter.post("/update-follower/:profileId", mustBeAuthenticated, updateFollower);
profileRouter.get("/uploads", mustBeAuthenticated, getUploads);
profileRouter.get("/uploads/:profileId", mustBeAuthenticated, getPublicUploads);
profileRouter.get("/info/:profileId", getPublicProfile);
profileRouter.get("/playlist/:profileId", getPublicPlaylist);
profileRouter.get("/recommended", isAuthenticated, getRecommendedByProfile);
profileRouter.get("/auto-generated-playlist", mustBeAuthenticated, getAutoGeneratedPlaylist);
profileRouter.get("/followers", mustBeAuthenticated, getFollowersProfile);
profileRouter.get("/followers/:profileId", mustBeAuthenticated, getFollowersProfilePublic);
profileRouter.get("/followings", mustBeAuthenticated, getFollowingsProfile);
profileRouter.get("/playlist-audios/:playlistId", getPlaylistAudios);
profileRouter.get("/private-playlist-audios/:playlistId", mustBeAuthenticated, getPrivatePlaylistAudios);
profileRouter.get("/is-following/:profileId", mustBeAuthenticated, getIsFollowing);

export default profileRouter;